package jp.co.arthur.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LoginUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public LoginUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andLoginIdIsNull() {
			addCriterion("LOGIN_ID is null");
			return (Criteria) this;
		}

		public Criteria andLoginIdIsNotNull() {
			addCriterion("LOGIN_ID is not null");
			return (Criteria) this;
		}

		public Criteria andLoginIdEqualTo(String value) {
			addCriterion("LOGIN_ID =", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdNotEqualTo(String value) {
			addCriterion("LOGIN_ID <>", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdGreaterThan(String value) {
			addCriterion("LOGIN_ID >", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdGreaterThanOrEqualTo(String value) {
			addCriterion("LOGIN_ID >=", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdLessThan(String value) {
			addCriterion("LOGIN_ID <", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdLessThanOrEqualTo(String value) {
			addCriterion("LOGIN_ID <=", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdLike(String value) {
			addCriterion("LOGIN_ID like", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdNotLike(String value) {
			addCriterion("LOGIN_ID not like", value, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdIn(List<String> values) {
			addCriterion("LOGIN_ID in", values, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdNotIn(List<String> values) {
			addCriterion("LOGIN_ID not in", values, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdBetween(String value1, String value2) {
			addCriterion("LOGIN_ID between", value1, value2, "loginId");
			return (Criteria) this;
		}

		public Criteria andLoginIdNotBetween(String value1, String value2) {
			addCriterion("LOGIN_ID not between", value1, value2, "loginId");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("PASSWORD is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("PASSWORD is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("PASSWORD =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("PASSWORD <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("PASSWORD >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("PASSWORD >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("PASSWORD <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("PASSWORD <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("PASSWORD like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("PASSWORD not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("PASSWORD in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("PASSWORD not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("PASSWORD between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("PASSWORD not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andAccountIsNull() {
			addCriterion("ACCOUNT is null");
			return (Criteria) this;
		}

		public Criteria andAccountIsNotNull() {
			addCriterion("ACCOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andAccountEqualTo(String value) {
			addCriterion("ACCOUNT =", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotEqualTo(String value) {
			addCriterion("ACCOUNT <>", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThan(String value) {
			addCriterion("ACCOUNT >", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThanOrEqualTo(String value) {
			addCriterion("ACCOUNT >=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThan(String value) {
			addCriterion("ACCOUNT <", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThanOrEqualTo(String value) {
			addCriterion("ACCOUNT <=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLike(String value) {
			addCriterion("ACCOUNT like", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotLike(String value) {
			addCriterion("ACCOUNT not like", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountIn(List<String> values) {
			addCriterion("ACCOUNT in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotIn(List<String> values) {
			addCriterion("ACCOUNT not in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountBetween(String value1, String value2) {
			addCriterion("ACCOUNT between", value1, value2, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotBetween(String value1, String value2) {
			addCriterion("ACCOUNT not between", value1, value2, "account");
			return (Criteria) this;
		}

		public Criteria andValidDateIsNull() {
			addCriterion("VALID_DATE is null");
			return (Criteria) this;
		}

		public Criteria andValidDateIsNotNull() {
			addCriterion("VALID_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andValidDateEqualTo(Date value) {
			addCriterionForJDBCDate("VALID_DATE =", value, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("VALID_DATE <>", value, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateGreaterThan(Date value) {
			addCriterionForJDBCDate("VALID_DATE >", value, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("VALID_DATE >=", value, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateLessThan(Date value) {
			addCriterionForJDBCDate("VALID_DATE <", value, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("VALID_DATE <=", value, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateIn(List<Date> values) {
			addCriterionForJDBCDate("VALID_DATE in", values, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("VALID_DATE not in", values, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("VALID_DATE between", value1, value2, "validDate");
			return (Criteria) this;
		}

		public Criteria andValidDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("VALID_DATE not between", value1, value2, "validDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNull() {
			addCriterion("REG_DATE is null");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNotNull() {
			addCriterion("REG_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andRegDateEqualTo(Date value) {
			addCriterion("REG_DATE =", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotEqualTo(Date value) {
			addCriterion("REG_DATE <>", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThan(Date value) {
			addCriterion("REG_DATE >", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThanOrEqualTo(Date value) {
			addCriterion("REG_DATE >=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThan(Date value) {
			addCriterion("REG_DATE <", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThanOrEqualTo(Date value) {
			addCriterion("REG_DATE <=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIn(List<Date> values) {
			addCriterion("REG_DATE in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotIn(List<Date> values) {
			addCriterion("REG_DATE not in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateBetween(Date value1, Date value2) {
			addCriterion("REG_DATE between", value1, value2, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotBetween(Date value1, Date value2) {
			addCriterion("REG_DATE not between", value1, value2, "regDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNull() {
			addCriterion("UPDATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNotNull() {
			addCriterion("UPDATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateEqualTo(Date value) {
			addCriterion("UPDATE_DATE =", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotEqualTo(Date value) {
			addCriterion("UPDATE_DATE <>", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThan(Date value) {
			addCriterion("UPDATE_DATE >", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DATE >=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThan(Date value) {
			addCriterion("UPDATE_DATE <", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DATE <=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIn(List<Date> values) {
			addCriterion("UPDATE_DATE in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotIn(List<Date> values) {
			addCriterion("UPDATE_DATE not in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DATE between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DATE not between", value1, value2, "updateDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table login_user
	 * @mbg.generated  Sun Oct 07 01:53:51 JST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table login_user
     *
     * @mbg.generated do_not_delete_during_merge Sun Oct 07 01:45:52 JST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}